const express=require("express"),path=require("path"),bodyParser=require("body-parser"),axios=require("axios"),workouts=require("./workouts"),app=express(),PORT=process.env.PORT||8080,PYTHON_API_URL="https://backendpy-production.up.railway.app/";function errorResponse(e,r,o){return e.status(r).json({success:!1,error:o})}app.use(bodyParser.json()),app.use(express.static(path.join(__dirname,"dist"))),app.post("/api/recommend",((e,r)=>{try{const{workoutType:o,difficultyLevel:s}=e.body;if(!o)return errorResponse(r,400,"Workout type is required");if("semua"===o){let e=[];for(const r in workouts)for(const o in workouts[r])e=[...e,...workouts[r][o]];if(s&&"all"!==s){const r={beginner:"Easy",intermediate:"Medium",advanced:"Hard"};e=e.filter((e=>e.kesulitan===r[s]))}return r.json({success:!0,recommendations:e})}if(workouts[o]){let e=[];for(const r in workouts[o])e=[...e,...workouts[o][r]];if(s&&"all"!==s){const r={beginner:"Easy",intermediate:"Medium",advanced:"Hard"};e=e.filter((e=>e.kesulitan===r[s]))}return r.json({success:!0,recommendations:e})}return errorResponse(r,400,"Invalid workout type")}catch(e){return console.error("Error in recommend endpoint:",e),errorResponse(r,500,"Server error while processing recommendation")}})),app.post("/recommend",((e,r)=>{e.url="/api/recommend",app._router.handle(e,r)})),app.post("/api/recommendations",(async(e,r)=>{const{age:o,height:s,weight:t}=e.body;if(!o||!s||!t)return errorResponse(r,400,"Missing required fields");try{const e=await axios.post(`${PYTHON_API_URL}/api/recommend`,{age:o,height:s,weight:t});r.json(e.data)}catch(e){return console.error("Error connecting to Python server:",e.message),"ECONNREFUSED"===e.code?errorResponse(r,503,"Python server is not available. Please make sure it is running at "+PYTHON_API_URL):e.response?errorResponse(r,e.response.status,`Python server error: ${e.response.data.error||"Unknown error"}`):errorResponse(r,500,"Failed to process request with Python server")}})),app.get("/api/health",(async(e,r)=>{try{const e=await axios.get(`${PYTHON_API_URL}/api/health`);r.json({expressServer:"ok",pythonServer:e.data.status||"ok"})}catch(e){r.json({expressServer:"ok",pythonServer:"offline",error:e.message})}})),app.get("*",((e,r)=>{r.sendFile(path.join(__dirname,"dist","index.html"))})),app.listen(PORT,(()=>{console.log(`Express server running at http://localhost:${PORT}`),console.log(`Forwarding API requests to Python server at ${PYTHON_API_URL}`),console.log("Using in-memory storage for programs (data will be lost on server restart)")}));
